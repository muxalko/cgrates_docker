// Real-time Online/Offline Charging System (OCS) for Telecom & ISP environments
// Copyright (C) ITsysCOM GmbH
//
// This file contains the default configuration hardcoded into CGRateS.
// This is what you get when you load CGRateS with an empty configuration file.

{

"general": {
	//"node_id": "",											// identifier of this instance in the cluster, if empty it will be autogenerated
	//"logger":"*syslog",										// controls the destination of logs <*syslog|*stdout>
	"log_level": 7,											// control the level of messages logged (0-emerg to 7-debug)
	//"http_skip_tls_verify": false,							// if enabled Http Client will accept any TLS certificate
	"rounding_decimals": 4,									// system level precision for floats
	//"dbdata_encoding": "msgpack",							// encoding used to store object data in strings: <msgpack|json>
	//"tpexport_dir": "/var/spool/cgrates/tpe",				// path towards export folder for offline Tariff Plans
	//"poster_attempts": 3,									// number of attempts before considering post request failed (eg: *call_url, CDR replication)
	//"failed_posts_dir": "/var/spool/cgrates/failed_posts",	// directory path where we store failed requests
	"default_request_type": "*prepaid",						// default request type to consider when missing from requests: <""|*prepaid|*postpaid|*pseudoprepaid|*rated>
	//"default_category": "call",								// default category to consider when missing from requests
	"default_tenant": "golant",								// default tenant to consider when missing from requests
	//"default_timezone": "Local",							// default timezone for timestamps where not specified <""|UTC|Local|$IANA_TZ_DB>
	"connect_attempts": 10,									// initial server connect attempts
	"reconnects": 1,										// number of retries in case of connection lost
	//"connect_timeout": "1s",								// consider connection unsuccessful on timeout, 0 to disable the feature
	//"reply_timeout": "2s",									// consider connection down for replies taking longer than this value
	//"response_cache_ttl": "0s",								// the life span of a cached response
	//"internal_ttl": "2m",									// maximum duration to wait for internal connections before giving up
	//"locking_timeout": "10s",									// timeout internal locks to avoid deadlocks
	//"digest_separator": ",",
	//"digest_equal": ":",
},


"data_db": {								// database used to store runtime data (eg: accounts, cdr stats)
	//"db_type": "redis",						// data_db type: <redis|mongo>
	//"db_host": "127.0.0.1",					// data_db host address
	//PROD
	//"db_port": 8102, 						// data_db port to reach the database through dynomite
	//======
	"db_name": "0", 						// data_db database name to connect to
	//"db_user": "cgrates", 					// username to use when connecting to data_db
	//"db_password": "", 						// password to use when connecting to data_db
	//"load_history_size": 10,				// Number of records in the load history
},


"stor_db": {								// database used to store offline tariff plans and CDRs
	"db_type": "mysql",						// stor database type to use: <mongo|mysql|postgres>
	"db_host": "127.0.0.1",					// the host to connect to
	"db_port": 3306,						// the port to reach the stordb
	 //PROD
	  //"db_host": "lbvoip-ptk",                 // the host to connect to
	  "db_user": "cgrates",                 // username to use when connecting to stordb
     //"db_password": "CgrateSql",         // password to use when connecting to stordb
	  //======
	   //LAB
	  //"db_host": "cgr-lab-ptk-01",
	  //"db_user": "cgrateslab",                 // username to use when connecting to stordb LAB
      "db_password": "CGRateS.org", 
      //=======
	//"max_open_conns": 100,					// maximum database connections opened, not applying for mongo
	"max_idle_conns": 0,					// maximum database connections idle, not applying for mongo
	"conn_max_lifetime": 7200, 				// maximum amount of time in seconds a connection may be reused (0 for unlimited), not applying for mongo
	//"cdrs_indexes": [],						// indexes on cdrs table to speed up queries, used only in case of mongo
	
},

"listen": {
	"rpc_json": ":2012",					// RPC JSON listening address
	//"rpc_gob": "127.0.0.1:2013",			// RPC GOB listening address
	"http": ":2080",						// HTTP listening address
	//"rpc_json_tls" : "127.0.0.1:2022",		// RPC JSON TLS listening address
	//"rpc_gob_tls": "127.0.0.1:2023",		// RPC GOB TLS listening address
	//"http_tls": "127.0.0.1:2280",			// HTTP TLS listening address
	//"tls_server_certificate" : "",			// path to server certificate(must conatin server.crt + ca.crt)
	//"tls_server_key":"",					// path to server key
	//"tls_client_certificate" : "",			// path to client certificate(must conatin client.crt + ca.crt)
	//"tls_client_key":"",					// path to client key
},

"http": {										// HTTP server configuration
	//"json_rpc_url": "/jsonrpc",					// JSON RPC relative URL ("" to disable)
	//"ws_url": "/ws",							// WebSockets relative URL ("" to disable)
	//"freeswitch_cdrs_url": "/freeswitch_json",	// Freeswitch CDRS relative URL ("" to disable)
	//"http_cdrs": "/cdr_http",					// CDRS relative URL ("" to disable)
	//"use_basic_auth": false,					// use basic authentication
	//"auth_users": {},							// basic authentication usernames and base64-encoded passwords (eg: { "username1": "cGFzc3dvcmQ=", "username2": "cGFzc3dvcmQy "})
},

"scheduler": {
	"enabled": true,							// start Scheduler service: <true|false>
},


"filters": {								// Filters configuration (*new)
	"stats_conns": [{"address": "127.0.0.1:2012","transport":"*json"}],						// address where to reach the stat service, empty to disable stats functionality: <""|*internal|x.y.z.y:1234>
	//"indexed_selects":true,					// enable profile matching exclusively on indexes
},


"rals": {
	"enabled": true,						// enable Rater service: <true|false>
	"thresholds_conns": [{"address": "127.0.0.1:2012","transport":"*json"}],					// address where to reach the thresholds service, empty to disable thresholds functionality: <""|*internal|x.y.z.y:1234>
	//"cdrstats_conns": [{"address": "127.0.0.1:2012","transport":"*json"}],					// address where to reach the cdrstats service, empty to disable stats functionality: <""|*internal|x.y.z.y:1234>
	//"stats_conns": [{"address": "127.0.0.1:2012","transport":"*json"}],						// address where to reach the stat service, empty to disable stats functionality: <""|*internal|x.y.z.y:1234>
	//"pubsubs_conns": [{"address": "127.0.0.1:2012","transport":"*json"}],					// address where to reach the pubusb service, empty to disable pubsub functionality: <""|*internal|x.y.z.y:1234>
	//"attributes_conns": [{"address": "127.0.0.1:2012","transport":"*json"}],					// address where to reach the attribute service, empty to disable attributes functionality: <""|*internal|x.y.z.y:1234>
	//"users_conns": [],						// address where to reach the user service, empty to disable user profile functionality: <""|*internal|x.y.z.y:1234>
	//"aliases_conns": [],					// address where to reach the aliases service, empty to disable aliases functionality: <""|*internal|x.y.z.y:1234>
	//"rp_subject_prefix_matching": false,	// enables prefix matching for the rating profile subject
	//"lcr_subject_prefix_matching": false,	// enables prefix matching for the lcr subject
	//"max_computed_usage": {					// do not compute usage higher than this, prevents memory overload
	//	"*any": "189h",
	//	"*voice": "72h",
	//	"*data": "107374182400",
	//	"*sms": "10000"
	//},
},

"pubsubs": {
	"enabled": true,				// starts PubSub service: <true|false>.
},


"attributes": {								// Attribute service
	"enabled": true,						// starts attribute service: <true|false>.
	"string_indexed_fields": ["Account"],				// query indexes based on these fields for faster processing
	//"prefix_indexed_fields": ["Account"],			// query indexes based on these fields for faster processing
},


"thresholds": {								// Threshold service (*new)
	"enabled": true,						// starts ThresholdS service: <true|false>.
	//"store_interval": "",					// dump cache regularly to dataDB, 0 - dump at start/shutdown: <""|$dur>
	"string_indexed_fields": ["EventType","Account","BalanceID"],			// query indexes based on these fields for faster processing
	//"prefix_indexed_fields": [],			// query indexes based on these fields for faster processing
},




"stats": {
        "enabled": false,                                // starts Stat service: <true|false>.
        "store_interval": "",                   // dump cache regularly to dataDB, 0 - dump at start/shutdown: <""|$dur>
        //"thresholds_conns": [{"address": "*internal"}],
        "thresholds_conns": [{"address": "127.0.0.1:2012","transport":"*json"}],                        // address where to reach the thresholds service, empty to disable thresholds functionality: <""|*internal|x.y.z.y:1234>
        "indexed_fields": ["Account"],                   // query indexes based on these fields for faster processing
},

////////////////////////////////////SMG///////////////////////////////////////////
"sessions": {
	"enabled": true,						// starts session manager service: <true|false>
	//"listen_bijson": "127.0.0.1:2014",		// address where to listen for bidirectional JSON-RPC requests
	"rals_conns": [ 
		//{"address": "127.0.0.1:2012","transport":"*json"}
		{"address": "cgr-lab-ptk-01:2012","transport":"*json"}, // first to try, write
		{"address": "cgr-lab-hfa-01:2012","transport":"*json"}  // secondary , read (SLAVEOF NO ONE)
		//{"address": "*internal"}			// address where to reach the RALs <""|*internal|127.0.0.1:2013>
	],
	"cdrs_conns": [
		{"address": "127.0.0.1:2012","transport":"*json"}
		//{"address": "*internal"}			// address where to reach CDR Server, empty to disable CDR capturing <*internal|x.y.z.y:1234>
	],
	//"resources_conns": [{"address": "127.0.0.1:2012","transport":"*json"}],					// address where to reach the ResourceS <""|*internal|127.0.0.1:2013>
	//"thresholds_conns": [{"address": "127.0.0.1:2012","transport":"*json"}],					// address where to reach the ThresholdS <""|*internal|127.0.0.1:2013>
	//"stats_conns": [{"address": "127.0.0.1:2012","transport":"*json"}],						// address where to reach the StatS <""|*internal|127.0.0.1:2013>
	//"suppliers_conns": [{"address": "127.0.0.1:2012","transport":"*json"}],					// address where to reach the SupplierS <""|*internal|127.0.0.1:2013>
	"attributes_conns": [{"address": "127.0.0.1:2012","transport":"*json"}],					// address where to reach the AttributeS <""|*internal|127.0.0.1:2013>
	"session_replication_conns": [{"address": "cgr-replica:2012","transport":"*json"}],		// replicate sessions towards these session services
	//"debit_interval": "0s",					// interval to perform debits on.
	//"min_call_duration": "0s",				// only authorize calls with allowed duration higher than this
	"max_call_duration": "1h",				// maximum call duration a prepaid call can last
	"session_ttl": "15m",					// time after a session with no updates is terminated, not defined by default
	//"session_ttl_max_delay": "",			// activates session_ttl randomization and limits the maximum possible delay
	//"session_ttl_last_used": "",			// tweak LastUsed for sessions timing-out, not defined by default
	//"session_ttl_usage": "",				// tweak Usage for sessions timing-out, not defined by default
	"session_indexes": ["Account", "Category"],	// index sessions based on these fields for GetActiveSessions API
	//"client_protocol": 1.0,					// version of protocol to use when acting as JSON-PRC client <"0","1.0">
	//"channel_sync_interval": "0",			// sync channels regularly (0 to disable sync session)
},

"migrator": {
	"out_datadb_type": "redis",
	"out_datadb_host": "127.0.0.1",
	"out_datadb_port": "6379",
	"out_datadb_name": "0",
	"out_datadb_user": "cgrates",
	"out_datadb_password": "",
	"out_datadb_encoding" : "msgpack",
	"out_stordb_type": "mysql",
	"out_stordb_host": "cgr-lab-ptk-01",
	"out_stordb_port": "3306",
	"out_stordb_name": "cgrateslab",
	"out_stordb_user": "Pre1aB",
	"out_stordb_password": "",
},
}
