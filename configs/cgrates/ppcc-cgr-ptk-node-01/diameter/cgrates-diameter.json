{
    "diameter_agent": {
        "enabled": true,                                                // enables the diameter agent: <true|false>
        //"listen": "127.0.0.1:3868",                                    // address where to listen for diameter requests <x.y.z.y:1234>
        "listen": ":3868",
        "dictionaries_path": "/etc/cgrates/diameter/dict/",        // path towards directory holding additional dictionaries to load
        "sessions_conns": [
            //    {"address": "*internal"}                                // connection towards SessionService
                {"address": "sessions:2012","transport":"*json"},
        ],
        //"origin_host": "CGR-DA",                                        // diameter Origin-Host AVP used in replies
        "origin_host": "ppcc-cgr-ptk-node-01",
        //"origin_realm": "cgrates.org",                                // diameter Origin-Realm AVP used in replies
        "origin_realm": "ppcc-cgr-ptk-node-01.local",
        //"vendor_id": 0,                                                // diameter Vendor-Id AVP used in replies
        //"product_name": "CGRateS",                                    // diameter Product-Name AVP used in replies
        "product_name": "PPCC",

        "templates":{
            "*cca": [
                    {"tag": "SessionId",             "field_id": "Session-Id",             "type": "*composed", "value": "~*req.Session-Id",             "mandatory": true},
                    {"tag": "OriginHost",             "field_id": "Origin-Host",             "type": "*composed", "value": "~*vars.OriginHost",             "mandatory": true},
                    {"tag": "OriginRealm",             "field_id": "Origin-Realm",         "type": "*composed", "value": "~*vars.OriginRealm",         "mandatory": true},
                    {"tag": "AuthApplicationId",     "field_id": "Auth-Application-Id",     "type": "*composed", "value": "~*vars.*appid",                 "mandatory": true},
                    {"tag": "CCRequestType",         "field_id": "CC-Request-Type",         "type": "*composed", "value": "~*req.CC-Request-Type",         "mandatory": true},
                    {"tag": "CCRequestNumber",         "field_id": "CC-Request-Number",     "type": "*composed", "value": "~*req.CC-Request-Number",     "mandatory": true},
                        
            ],
            "cca-default": [
                    {"tag": "CCATemplate",     "type": "*template", "value": "*cca"},
                    {"tag": "ResultCodeDefaultNegative", "field_id": "Result-Code", "type": "*constant", "value": "5030"},
                    //Try to catch errors from cgr
                    {"tag": "ResultCode",  "field_id": "Result-Code", "filters": ["*rsr::~*cgrep.Error(NO_MORE_DATA)"],              "type": "*constant", "value": "5030", "Blocker":true},
                    {"tag": "ResultCode",  "field_id": "Result-Code", "filters": ["*rsr::~*cgrep.Error(NOT_IMPLEMENTED)"],           "type": "*constant", "value": "5030", "Blocker":true},
                    {"tag": "ResultCode",  "field_id": "Result-Code", "filters": ["*rsr::~*cgrep.Error(NOT_FOUND)"],                 "type": "*constant", "value": "5030", "Blocker":true},
                    {"tag": "ResultCode",  "field_id": "Result-Code", "filters": ["*rsr::~*cgrep.Error(TIMED_OUT)"],                 "type": "*constant", "value": "5030", "Blocker":true},
                    {"tag": "ResultCode",  "field_id": "Result-Code", "filters": ["*rsr::~*cgrep.Error(SERVER_ERROR)"],              "type": "*constant", "value": "5030", "Blocker":true},
                    {"tag": "ResultCode",  "field_id": "Result-Code", "filters": ["*rsr::~*cgrep.Error(MAX_RECURSION_DEPTH)"],       "type": "*constant", "value": "5030", "Blocker":true},
                    {"tag": "ResultCode",  "field_id": "Result-Code", "filters": ["*rsr::~*cgrep.Error(MANDATORY_IE_MISSING)"],      "type": "*constant", "value": "5030", "Blocker":true},
                    {"tag": "ResultCode",  "field_id": "Result-Code", "filters": ["*rsr::~*cgrep.Error(EXISTS)"],                    "type": "*constant", "value": "5030", "Blocker":true},
                    {"tag": "ResultCode",  "field_id": "Result-Code", "filters": ["*rsr::~*cgrep.Error(BROKEN_REFERENCE)"],          "type": "*constant", "value": "5030", "Blocker":true},
                    {"tag": "ResultCode",  "field_id": "Result-Code", "filters": ["*rsr::~*cgrep.Error(PARSER_ERROR)"],              "type": "*constant", "value": "5030", "Blocker":true},
                    {"tag": "ResultCode",  "field_id": "Result-Code", "filters": ["*rsr::~*cgrep.Error(INVALID_PATH)"],              "type": "*constant", "value": "5030", "Blocker":true},
                    {"tag": "ResultCode",  "field_id": "Result-Code", "filters": ["*rsr::~*cgrep.Error(INVALID_KEY)"],               "type": "*constant", "value": "5030", "Blocker":true},
                    {"tag": "ResultCode",  "field_id": "Result-Code", "filters": ["*rsr::~*cgrep.Error(UNAUTHORIZED_DESTINATION)"],  "type": "*constant", "value": "5030", "Blocker":true},
                    {"tag": "ResultCode",  "field_id": "Result-Code", "filters": ["*rsr::~*cgrep.Error(RATING_PLAN_NOT_FOUND)"],     "type": "*constant", "value": "5031", "Blocker":true}, // DIAMETER_RATING_FAILED                     
                    {"tag": "ResultCode",  "field_id": "Result-Code", "filters": ["*rsr::~*cgrep.Error(ACCOUNT_NOT_FOUND)"],         "type": "*constant", "value": "5030", "Blocker":true}, // DIAMETER_USER_UNKNOWN                      
                    {"tag": "ResultCode",  "field_id": "Result-Code", "filters": ["*rsr::~*cgrep.Error(ACCOUNT_DISABLED)"],          "type": "*constant", "value": "5030", "Blocker":true},
                    {"tag": "ResultCode",  "field_id": "Result-Code", "filters": ["*rsr::~*cgrep.Error(USER_NOT_FOUND)"],            "type": "*constant", "value": "5030", "Blocker":true}, // DIAMETER_USER_UNKNOWN                      
                    {"tag": "ResultCode",  "field_id": "Result-Code", "filters": ["*rsr::~*cgrep.Error(INSUFFICIENT_CREDIT)"],       "type": "*constant", "value": "4010", "Blocker":true}, // DIAMETER_END_USER_SERVICE_DENIED
                    {"tag": "ResultCode",  "field_id": "Result-Code", "filters": ["*rsr::~*cgrep.Error(NOT_CONVERTIBLE)"],           "type": "*constant", "value": "5030", "Blocker":true},
                    {"tag": "ResultCode",  "field_id": "Result-Code", "filters": ["*rsr::~*cgrep.Error(RESOURCE_UNAVAILABLE)"],      "type": "*constant", "value": "5030", "Blocker":true},
                    {"tag": "ResultCode",  "field_id": "Result-Code", "filters": ["*rsr::~*cgrep.Error(RESOURCE_UNAUTHORIZED)"],     "type": "*constant", "value": "5030", "Blocker":true},
                    {"tag": "ResultCode",  "field_id": "Result-Code", "filters": ["*rsr::~*cgrep.Error(NO_ACTIVE_SESSION)"],         "type": "*constant", "value": "5030", "Blocker":true},
                    {"tag": "ResultCode",  "field_id": "Result-Code", "filters": ["*rsr::~*cgrep.Error(PARTIALLY_EXECUTED)"],        "type": "*constant", "value": "5030", "Blocker":true},
                    {"tag": "ResultCode",  "field_id": "Result-Code", "filters": ["*rsr::~*cgrep.Error(MAX_USAGE_EXCEEDED)"],        "type": "*constant", "value": "4012", "Blocker":true}, // DIAMETER_CREDIT_LIMIT_REACHED              
                    {"tag": "ResultCode",  "field_id": "Result-Code", "filters": ["*rsr::~*cgrep.Error(UNALLOCATED_RESOURCE)"],      "type": "*constant", "value": "5030", "Blocker":true},
                    //Doublecheck everything is OK 
                    {"tag": "ResultCode",  "field_id": "Result-Code", "filters": ["*rsr::~*cgrep.Error(^$)"],        "type": "*constant", "value": "2001"},
                    {"tag": "RatingGroup", "field_id": "Multiple-Services-Credit-Control.Rating-Group",            "type": "*constant", "value": "1"},
                    {"tag": "ServiceId",   "field_id": "Multiple-Services-Credit-Control.Service-Identifier",        "type": "*constant", "value": "1"},
                    {"tag": "ValidityTime","field_id": "Multiple-Services-Credit-Control.Validity-Time",            "type": "*constant", "value": "600"},
            ]
        },
        
        "request_processors": [
        {
                "id": "data_init",
                "filters": ["*string:*vars.*cmd:CCR", "*string:*req.CC-Request-Type:1", "*string:*req.Service-Context-Id:7.32251@3gpp.org"],
                //"filters": ["*string:*vars.*cmd:CCR", "*string:*req.CC-Request-Type:1", "*rsr::*req.Service-Context-Id(@3gpp.org$)"],
                "flags": ["*initiate", "*accounts", "*attributes"],
                "request_fields":[
                    {"tag": "TOR",          "field_id": "ToR",              "type": "*constant",    "value": "*data",                 "mandatory": true},
                    {"tag": "OriginHost",   "field_id": "OriginHost",       "type": "*composed",    "value": "~*req.Origin-Host",     "mandatory": true},
                    {"tag": "OriginID",     "field_id": "OriginID",         "type": "*composed",    "value": "~*req.Session-Id",      "mandatory": true},
                    {"tag": "RequestType",  "field_id": "RequestType",      "type": "*composed",    "value": "^*prepaid",             "mandatory": true},
                    {"tag": "Direction",    "field_id": "Direction",        "type": "*composed",    "value": "^*out",                 "mandatory": true},
                    {"tag": "Tenant",       "field_id": "Tenant",           "type": "*composed",    "value": "^golant",               "mandatory": true},
                    //{"tag": "Category",     "field_id": "Category",         "type": "*composed",    "value": "^data",                 "mandatory": true},
                    {"tag": "Category",     "field_id": "Category",         "type": "*constant",    "value": "*attributes",           "mandatory": true},
                    {"tag": "Account",      "field_id": "Account",          "type": "*composed",    "value": "~*req.Subscription-Id.Subscription-Id-Data[~Subscription-Id-Type(0)]", "mandatory": true },
                    {"tag": "Destination",  "field_id": "Destination",      "type": "*composed",    "value": "~*req.Service-Information.PS-Information.3GPP-SGSN-MCC-MNC",     "mandatory": true},
                    {"tag": "SetupTime",    "field_id": "SetupTime",        "type": "*composed",    "value": "~*req.Event-Timestamp", "mandatory": true},
                    {"tag": "AnswerTime",   "field_id": "AnswerTime",       "type": "*composed",    "value": "~*req.Event-Timestamp", "mandatory": true},
                    {"tag": "Usage",        "field_id": "Usage",            "type": "*constant",    "value": "10485760"}
                ],
                "reply_fields": [
                    {"tag": "CCATemplate", "type": "*template", "value": "cca-default"},
                    {"tag": "GrantedUnits", "field_id": "Multiple-Services-Credit-Control.Granted-Service-Unit.CC-Total-Octets",
					      "filters": ["*rsr::~*cgrep.MaxUsage(-1)"], "type": "*constant", "value": "10485760", "mandatory": true},
                    {"tag": "GrantedUnits", "field_id": "Multiple-Services-Credit-Control.Granted-Service-Unit.CC-Total-Octets",
					      "filters": ["*rsr::~*cgrep.MaxUsage(!-1)"], "type": "*constant", "value": "~*cgrep.MaxUsage{*duration_nanoseconds}", "mandatory": true},
                    ]
                },
                {
                    "id": "data_update",
                    "filters": ["*string:*vars.*cmd:CCR", "*string:*req.CC-Request-Type:2", "*string:*req.Service-Context-Id:7.32251@3gpp.org"],
                    //"filters": ["*string:*vars.*cmd:CCR", "*string:*req.CC-Request-Type:2", "*string:*req.Multiple-Services-Credit-Control>Rating-Group:1", "*rsr::*req.Service-Context-Id(@3gpp.org$)"],    
                    "flags": ["*update", "*accounts", "*attributes"],
                    "request_fields":[
                        {"tag": "TOR",          "field_id": "ToR",            "type": "*constant", "value": "*data",                         "mandatory": true},
                        {"tag": "OriginHost",   "field_id": "OriginHost",     "type": "*composed", "value": "~*req.Origin-Host",             "mandatory": true},
                        {"tag": "OriginID",     "field_id": "OriginID",       "type": "*composed", "value": "~*req.Session-Id",              "mandatory": true},
                        {"tag": "RequestType",  "field_id": "RequestType",    "type": "*composed", "value": "^*prepaid",                     "mandatory": true},
                        {"tag": "Direction",    "field_id": "Direction",      "type": "*composed", "value": "^*out",                         "mandatory": true},
                        {"tag": "Tenant",       "field_id": "Tenant",         "type": "*composed", "value": "^golant",                       "mandatory": true},
                        //{"tag": "Category",     "field_id": "Category",       "type": "*composed", "value": "^data",                         "mandatory": true},
                        {"tag": "Category",     "field_id": "Category",       "type": "*constant", "value": "*attributes",                   "mandatory": true},
                        {"tag": "Account",      "field_id": "Account",        "type": "*composed", "value": "~*req.Subscription-Id.Subscription-Id-Data[~Subscription-Id-Type(0)]" , "mandatory": true },
                        {"tag": "Destination",  "field_id": "Destination",    "type": "*composed", "value": "~*req.Service-Information.PS-Information.3GPP-SGSN-MCC-MNC", "mandatory": true},
                        {"tag": "SetupTime",    "field_id": "SetupTime",      "type": "*composed", "value": "~*req.Event-Timestamp",         "mandatory": true},
                        {"tag": "AnswerTime",   "field_id": "AnswerTime",     "type": "*composed", "value": "~*req.Event-Timestamp",         "mandatory": true},
                        //{"tag": "Usage",        "field_id": "Usage",          "type": "*composed", "value": "^*attributes"},
						{"tag": "Usage",        "field_id": "Usage",          "type": "*constant", "value": "10485760"},
						{"tag": "LastUsed",     "field_id": "LastUsed",       "type": "*sum", 
					        "value": "~*req.Multiple-Services-Credit-Control.Used-Service-Unit.CC-Input-Octets[~Rating-Group(1)];~*req.Multiple-Services-Credit-Control.Used-Service-Unit.CC-Output-Octets[~Rating-Group(1)]"},
                    ],
                    "reply_fields": [
                        {"tag": "GrantedUnits", "field_id": "Multiple-Services-Credit-Control.Granted-Service-Unit.CC-Total-Octets", 
						   "filters": ["*rsr::~*cgrep.MaxUsage(-1)"], "type": "*constant", "value": "10485760", "mandatory": true},
                        {"tag": "GrantedUnits", "field_id": "Multiple-Services-Credit-Control.Granted-Service-Unit.CC-Total-Octets", 
						   "filters": ["*rsr::~*cgrep.MaxUsage(!-1)"], "type": "*constant", "value": "~*cgrep.MaxUsage{*duration_nanoseconds}", "mandatory": true},
                    ]
                },
                {
                    "id": "data_terminate",
                    "filters": ["*string:*vars.*cmd:CCR", "*string:*req.CC-Request-Type:3", "*string:*req.Service-Context-Id:7.32251@3gpp.org"],
                    //"filters": ["*string:*vars.*cmd:CCR", "*string:*req.CC-Request-Type:3","*rsr::*req.Service-Context-Id(@3gpp.org$)"],
                    "flags": ["*terminate", "*accounts", "*attributes", "*cdrs"],
                    "request_fields":[
                        {"tag": "TOR",                                 "field_id": "ToR",                              "type": "*constant",     "value": "*data",                 "mandatory": true},
                        {"tag": "OriginHost",                          "field_id": "OriginHost",                       "type": "*composed",     "value": "~*req.Origin-Host",   "mandatory": true},
                        {"tag": "OriginID",                            "field_id": "OriginID",                         "type": "*composed",     "value": "~*req.Session-Id",    "mandatory": true},
                        {"tag": "RequestType",                         "field_id": "RequestType",                      "type": "*composed",     "value": "^*prepaid",              "mandatory": true},
                        {"tag": "Direction",                           "field_id": "Direction",                        "type": "*composed",     "value": "^*out",                  "mandatory": true},
                        {"tag": "Tenant",                              "field_id": "Tenant",                           "type": "*composed",     "value": "^golant",                "mandatory": true},
                        //{"tag": "Category",                            "field_id": "Category",                         "type": "*composed",     "value": "^data",               "mandatory": true},
                        {"tag": "Category",                            "field_id": "Category",                         "type": "*constant",     "value": "*attributes",               "mandatory": true},
                        {"tag": "Account",                             "field_id": "Account",                          "type": "*composed",     "value": "~*req.Subscription-Id.Subscription-Id-Data[~Subscription-Id-Type(0)]" , "mandatory": true },
                        {"tag": "Destination",                         "field_id": "Destination",                      "type": "*composed",     "value": "~*req.Service-Information.PS-Information.3GPP-SGSN-MCC-MNC", "mandatory": true},
                        {"tag": "SetupTime",                           "field_id": "SetupTime",                        "type": "*composed",     "value": "~*req.Event-Timestamp",     "mandatory": true},
                        {"tag": "AnswerTime",                          "field_id": "AnswerTime",                       "type": "*composed",     "value": "~*req.Event-Timestamp",     "mandatory": true},
                        {"tag": "Reporting-Reason",                    "field_id": "Reporting-Reason",                 "type": "*composed",      "value": "Multiple-Services-Credit-Control[~Rating-Group(1)].Reporting-Reason", "mandatory": false},
                        {"tag": "Termination-Cause",                   "field_id": "Termination-Cause",                "type": "*composed",     "value": "~*req.Termination-Cause", "mandatory": false},
                        {"tag": "LastUsed",     "field_id": "LastUsed",       "type": "*sum", 
					        "value": "~*req.Multiple-Services-Credit-Control.Used-Service-Unit.CC-Input-Octets[~Rating-Group(1)];~*req.Multiple-Services-Credit-Control.Used-Service-Unit.CC-Output-Octets[~Rating-Group(1)]"},
                        {"tag": "Called-Station-Id",                   "field_id": "Called-Station-Id",                "type": "*composed",     "value": "~*req.Service-Information.PS-Information.Called-Station-Id",                    "mandatory": false},
                        {"tag": "3GPP-Charging-Id",                    "field_id": "3GPP-Charging-Id",                 "type": "*composed",     "value": "~*req.Service-Information.PS-Information.3GPP-Charging-Id",                     "mandatory": false},
                        {"tag": "3GPP-GPRS-Negotiated-QoS-profile",    "field_id": "3GPP-GPRS-Negotiated-QoS-profile", "type": "*composed",     "value": "~*req.Service-Information.PS-Information.3GPP-GPRS-Negotiated-QoS-profile",     "mandatory": false},
                        {"tag": "3GPP-Charging-Characteristics",       "field_id": "3GPP-Charging-Characteristics",    "type": "*composed",     "value": "~*req.Service-Information.PS-Information.3GPP-Charging-Characteristics",        "mandatory": false},
                        {"tag": "3GPP-PDP-Type",                       "field_id": "3GPP-PDP-Type",                    "type": "*composed",     "value": "~*req.Service-Information.PS-Information.3GPP-PDP-Type",                        "mandatory": false},
                        {"tag": "GPP-SGSN-MCC-MNC",                    "field_id": "3GPP-SGSN-MCC-MNC",                "type": "*composed",     "value": "~*req.Service-Information.PS-Information.3GPP-SGSN-MCC-MNC",                    "mandatory": false},
                        {"tag": "3GPP-GGSN-MCC-MNC",                   "field_id": "3GPP-GGSN-MCC-MNC",                "type": "*composed",     "value": "~*req.Service-Information.PS-Information.3GPP-GGSN-MCC-MNC",                    "mandatory": false},
                        {"tag": "3GPP-NSAPI",                          "field_id": "3GPP-NSAPI",                       "type": "*composed",     "value": "~*req.Service-Information.PS-Information.3GPP-NSAPI",                           "mandatory": false},
                        {"tag": "3GPP-MS-TimeZone",                    "field_id": "3GPP-MS-TimeZone",                 "type": "*composed",     "value": "~*req.Service-Information.PS-Information.3GPP-MS-TimeZone",                     "mandatory": false},
                        {"tag": "3GPP-Selection-Mode",                 "field_id": "3GPP-Selection-Mode",              "type": "*composed",     "value": "~*req.Service-Information.PS-Information.3GPP-Selection-Mode",                  "mandatory": false},
                        {"tag": "3GPP-RAT-Type",                       "field_id": "3GPP-RAT-Type",                    "type": "*composed",     "value": "~*req.Service-Information.PS-Information.3GPP-RAT-Type",                        "mandatory": false},
                        {"tag": "3GPP-User-Location-Info",             "field_id": "3GPP-User-Location-Info",          "type": "*composed",     "value": "~*req.Service-Information.PS-Information.3GPP-User-Location-Info",              "mandatory": false},
                        {"tag": "PDP-Address",                         "field_id": "PDP-Address",                      "type": "*composed",     "value": "~*req.Service-Information.PS-Information.PDP-Address",                          "mandatory": false},
                        {"tag": "3GPP-IMSI-MCC-MNC",                   "field_id": "3GPP-IMSI-MCC-MNC",                "type": "*composed",     "value": "~*req.Service-Information.PS-Information.3GPP-IMSI-MCC-MNC",                    "mandatory": false},
                        {"tag": "GGSN-Address",                        "field_id": "GGSN-Address",                     "type": "*composed",     "value": "~*req.Service-Information.PS-Information.GGSN-Address",                         "mandatory": false},
                        {"tag": "SGSN-Address",                        "field_id": "SGSN-Address",                     "type": "*composed",     "value": "~*req.Service-Information.PS-Information.SGSN-Address",                         "mandatory": false},
                        {"tag": "Charging-Rule-Base-Name",             "field_id": "Charging-Rule-Base-Name",          "type": "*composed",     "value": "~*req.Service-Information.PS-Information.Charging-Rule-Base-Name",              "mandatory": false},
                        {"tag": "PDP-Context-Type",                    "field_id": "PDP-Context-Type",                 "type": "*composed",     "value": "~*req.Service-Information.PS-Information.PDP-Context-Type",                     "mandatory": false}
                    ]
                    
                }
        ],
    }
}