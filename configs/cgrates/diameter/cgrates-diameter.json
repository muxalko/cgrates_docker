{
    "diameter_agent": {
        "enabled": true,                                                // enables the diameter agent: <true|false>                                 
        //Needed for SCTP
        //"listen_net":"*env:DA_LISTEN_NET",
        "listen": "*env:DA_LISTEN",                                                                     // address where to listen for diameter requests <x.y.z.y:1234>
        "dictionaries_path": "/etc/cgrates/diameter/dict/",        // path towards directory holding additional dictionaries to load
        "sessions_conns": [
          //    {"address": "*internal"}  
          "sessions_address_pool"                              // connection towards SessionService
        ],                                     
        "origin_host": "*env:DA_ORIGIN_HOST",                           // diameter Origin-Host AVP used in replies
        "origin_realm": "*env:DA_ORIGIN_REALM",                         // diameter Origin-Realm AVP used in replies
        //"vendor_id": 0,                                               // diameter Vendor-Id AVP used in replies
        "product_name": "*env:DA_PRODUCT_NAME",                         // diameter Product-Name AVP used in replies
        //"concurrent_requests": -1,                      // limit the number of active requests processed by the server <-1|0-n>
        //"synced_conn_requests": false,          // process one request at the time per connection
        "asr_template": "*asr",                         // enable AbortSession message being sent to client
        "templates":{
            "*cca": [
                    {"tag": "SessionId",              "path": "*rep.Session-Id",             "type": "*variable",  "value": "~*req.Session-Id",           "mandatory": true},
                    {"tag": "OriginHost",             "path": "*rep.Origin-Host",            "type": "*variable",  "value": "~*vars.OriginHost",          "mandatory": true},
                    {"tag": "OriginRealm",            "path": "*rep.Origin-Realm",           "type": "*variable",  "value": "~*vars.OriginRealm",         "mandatory": true},
                    {"tag": "AuthApplicationId",      "path": "*rep.Auth-Application-Id",    "type": "*variable",  "value": "~*vars.*appid",              "mandatory": true},
                    {"tag": "CCRequestType",          "path": "*rep.CC-Request-Type",        "type": "*variable",  "value": "~*req.CC-Request-Type",      "mandatory": true},
                    {"tag": "CCRequestNumber",        "path": "*rep.CC-Request-Number",      "type": "*variable",  "value": "~*req.CC-Request-Number",    "mandatory": true},
                    //{"tag": "ResultCode",             "path": "*rep.Result-Code",            "type": "*constant", "filters": ["*rsr::~*cgrep.Error(!^$)"], "value": "5030", "blocker": true},
                    {"tag": "ResultCode",             "path": "*rep.Result-Code",            "type": "*constant", "value": "5030", "filters": ["*notempty:~*cgrep.Error:"],   "blocker": true},
                    ],
             "*asr": [       // *asr is used to build AbortSessionRequest
                        {"tag":"SessionId",				"path":"*diamreq.Session-Id",			"type":"*variable",			"mandatory":true,			"value":"~*req.Session-Id"},			
                        {"tag":"OriginHost",			"path":"*diamreq.Origin-Host",			"type":"*variable",			"mandatory":true,			"value":"~*req.Destination-Host"},			
                        {"tag":"OriginRealm",			"path":"*diamreq.Origin-Realm",			"type":"*variable",			"mandatory":true,			"value":"~*req.Destination-Realm"},			
                        {"tag":"DestinationRealm",		"path":"*diamreq.Destination-Realm",     "type":"*variable",			"mandatory":true,			"value":"~*req.Origin-Realm"},			
                        {"tag":"DestinationHost",		"path":"*diamreq.Destination-Host",      "type":"*variable",			"mandatory":true,			"value":"~*req.Origin-Host"},			
                        {"tag":"AuthApplicationId",		"path":"*diamreq.Auth-Application-Id",   "type":"*variable",			"mandatory":true,			"value":"~*vars.*appid"},			
                        {"tag":"UserName",			    "path":"*diamreq.User-Name",             "type":"*variable",			"mandatory":true,			"value":"~*req.User-Name"},			
                        {"tag":"OriginStateID",			"path":"*diamreq.Origin-State-Id",       "type":"*constant",			"value":"1"}
                    ],
                "*rar": [
                    {"tag": "SessionId", "path": "*diamreq.Session-Id", "type": "*variable", "value": "~*req.Session-Id", "mandatory": true},
                    {"tag": "OriginHost", "path": "*diamreq.Origin-Host", "type": "*variable", "value": "~*req.Destination-Host", "mandatory": true},
                    {"tag": "OriginRealm", "path": "*diamreq.Origin-Realm", "type": "*variable", "value": "~*req.Destination-Realm", "mandatory": true},
                    {"tag": "DestinationRealm", "path": "*diamreq.Destination-Realm", "type": "*variable", "value": "~*req.Origin-Realm", "mandatory": true},
                    {"tag": "DestinationHost", "path": "*diamreq.Destination-Host", "type": "*variable", "value": "~*req.Origin-Host", "mandatory": true},
                    {"tag": "AuthApplicationId", "path": "*diamreq.Auth-Application-Id", "type": "*variable", "value": "~*vars.*appid", "mandatory": true},
                    {"tag": "ReAuthRequestType", "path": "*diamreq.Re-Auth-Request-Type", "type": "*constant", "value": "0"},
                ],
            "cca-custom": [
                    //Doublecheck everything is OK 
                    //{"tag": "ResultCode",  "path": "*rep.Result-Code", "filters": ["*rsr::~*cgrep.Error(^$)"],      "type": "*constant", "value": "2001"},
                    //{"tag": "ResultCode",  "path": "*rep.Result-Code", "type": "*constant", "value": "2001", "filters": ["*empty:~*cgrep.Error:"]},
                    {"tag": "RatingGroup", "path": "*rep.Multiple-Services-Credit-Control.Rating-Group",            "type": "*constant", "value": "1"},
                    {"tag": "ServiceId",   "path": "*rep.Multiple-Services-Credit-Control.Service-Identifier",      "type": "*constant", "value": "1"},
                    {"tag": "ValidityTime","path": "*rep.Multiple-Services-Credit-Control.Validity-Time",           "type": "*constant", "value": "600"}

            ]
        },
        
        "request_processors": [
        {
        "id": "data_auth",
        "filters": ["*string:~*vars.*cmd:CCR", "*string:~*req.CC-Request-Type:1"],
        "flags": ["*auth", "*accounts","*continue"],
        "request_fields":[
            {"tag": "TOR",          "path": "*cgreq.ToR",              "type": "*constant",    "value": "*data",                 "mandatory": true},
            {"tag": "OriginHost",   "path": "*cgreq.OriginHost",       "type": "*variable",     "value": "~*req.Origin-Host",     "mandatory": true},
            {"tag": "OriginID",     "path": "*cgreq.OriginID",         "type": "*variable",     "value": "~*req.Session-Id",      "mandatory": true},
            {"tag": "RequestType",  "path": "*cgreq.RequestType",      "type": "*variable",     "value": "*prepaid",             "mandatory": true},
            {"tag": "Tenant",       "path": "*cgreq.Tenant",           "type": "*variable",     "value": "golant",               "mandatory": true},
            //{"tag": "Category",     "path": "*cgreq.Category",         "type": "*constant",    "value": "*attributes",           "mandatory": true},
            {"tag": "Category",     "path": "*cgreq.Category",         "type": "*constant",    "value": "data",           "mandatory": true},
            {"tag": "Account",      "path": "*cgreq.Account",          "type": "*variable",     "value": "~*req.Subscription-Id.Subscription-Id-Data[~Subscription-Id-Type(0)]", "mandatory": true },
            {"tag": "Destination",  "path": "*cgreq.Destination",      "type": "*variable",    "value": "~*req.Service-Information.PS-Information.3GPP-SGSN-MCC-MNC",     "mandatory": true},
            {"tag": "SetupTime",    "path": "*cgreq.SetupTime",        "type": "*variable",    "value": "~*req.Event-Timestamp", "mandatory": true},
            {"tag": "AnswerTime",   "path": "*cgreq.AnswerTime",       "type": "*variable",    "value": "~*req.Event-Timestamp", "mandatory": true},
            {"tag": "Usage",        "path": "*cgreq.Usage",            "type": "*constant",    "value": "10485760"}
        ], 
        "reply_fields": [
            {"tag": "CCATemplate", "type": "*template", "value": "*cca"},
            {"tag": "ResultCode",  "path": "*rep.Result-Code", "type": "*constant", "value": "4010",  "blocker": true,
                "filters": ["*lt:~*cgrep.MaxUsage{*duration_nanoseconds}:102400"]}
           ]
      },
      {
        "id": "data_init",
        //https://github.com/cgrates/cgrates/blob/e1c822462c43019048808932e230b00b359ed839/agents/diamagent.go#L146
        //"filters": ["*string:~*vars.*cmd:CCR", "*string:~*req.CC-Request-Type:1", "*string:~*req.Service-Context-Id:008.425.13.32251@3gpp.org"],
        //"filters": ["*string:~*vars.*cmd:CCR", "*string:~*req.CC-Request-Type:1", "*string:~*req.Service-Context-Id:7.32251@3gpp.org"],
        "filters": ["*string:~*vars.*cmd:CCR", "*string:~*req.CC-Request-Type:1","*gt:~*cgrep.MaxUsage:0"],
        "flags": ["*initiate", "*accounts"],
        "request_fields":[
            {"tag": "TOR",          "path": "*cgreq.ToR",              "type": "*constant",    "value": "*data",                 "mandatory": true},
            {"tag": "OriginHost",   "path": "*cgreq.OriginHost",       "type": "*variable",     "value": "~*req.Origin-Host",     "mandatory": true},
            {"tag": "OriginID",     "path": "*cgreq.OriginID",         "type": "*variable",     "value": "~*req.Session-Id",      "mandatory": true},
            {"tag": "RequestType",  "path": "*cgreq.RequestType",      "type": "*variable",     "value": "*prepaid",             "mandatory": true},
            {"tag": "Tenant",       "path": "*cgreq.Tenant",           "type": "*variable",     "value": "golant",               "mandatory": true},
            //{"tag": "Category",     "path": "*cgreq.Category",         "type": "*constant",    "value": "*attributes",           "mandatory": true},
            {"tag": "Category",     "path": "*cgreq.Category",         "type": "*constant",    "value": "data",           "mandatory": true},
            {"tag": "Account",      "path": "*cgreq.Account",          "type": "*variable",     "value": "~*req.Subscription-Id.Subscription-Id-Data[~Subscription-Id-Type(0)]", "mandatory": true },
            {"tag": "Destination",  "path": "*cgreq.Destination",      "type": "*variable",    "value": "~*req.Service-Information.PS-Information.3GPP-SGSN-MCC-MNC",     "mandatory": true},
            {"tag": "SetupTime",    "path": "*cgreq.SetupTime",        "type": "*variable",    "value": "~*req.Event-Timestamp", "mandatory": true},
            {"tag": "AnswerTime",   "path": "*cgreq.AnswerTime",       "type": "*variable",    "value": "~*req.Event-Timestamp", "mandatory": true},
            {"tag": "Usage",        "path": "*cgreq.Usage",            "type": "*constant",    "value": "10485760"}
        ],
        "reply_fields": [
            {"tag": "CCATemplate", "type": "*template", "value": "*cca"},
            {"tag": "ResultCode",  "path": "*rep.Result-Code", "type": "*constant", "value": "4010",  "blocker": true,
               // "filters": ["*rsr::~*cgrep.MaxUsage{*duration_nanoseconds}(<102400)"]}, 
               "filters": ["*lt:~*cgrep.MaxUsage{*duration_nanoseconds}:102400"]},
            {"tag": "ResultCode",  "path": "*rep.Result-Code", "type": "*constant", "value": "2001", "filters": ["*empty:~*cgrep.Error:"]},
            {"tag": "GrantedUnits", "path": "*rep.Multiple-Services-Credit-Control.Granted-Service-Unit.CC-Total-Octets", 
                //"filters": ["*rsr::~*cgrep.MaxUsage{*duration_nanoseconds}(>0)"], 
                "filters": ["*gt:~*cgrep.MaxUsage{*duration_nanoseconds}:0"], 
                "type": "*variable", "value": "~*cgrep.MaxUsage{*duration_nanoseconds}", 
                    //"value": "~*cgrep.MaxUsage{*duration_nanoseconds&*multiply:1048576&*round}",
                    "mandatory": true},
                {"tag": "CCATemplate", "type": "*template", "value": "cca-custom", 
                    //"filters": ["*rsr::~*cgrep.MaxUsage{*duration_nanoseconds}(>102400)"]},
                    "filters": ["*gt:~*cgrep.MaxUsage{*duration_nanoseconds}:102400"]},
                       //{"tag": "GrantedUnits", "path": "*rep.Multiple-Services-Credit-Control.Granted-Service-Unit.CC-Total-Octets", 
                        //   "filters": ["*string:*cgrep.MaxUsage{*duration_nanoseconds}:-1"],
                        //   "filters": ["*rsr::~*cgrep.MaxUsage{*duration_nanoseconds}(-1)"],
                        //   "type": "*constant", "value": "10485760", "mandatory": true},
                
           ],
           
},
      {
                "id": "data_update",
                    //"filters": ["*string:~*vars.*cmd:CCR", "*string:~*req.CC-Request-Type:2", "*string:~*req.Service-Context-Id:008.425.13.32251@3gpp.org"],  
                    "filters": ["*string:~*vars.*cmd:CCR", "*string:~*req.CC-Request-Type:2"],
                    "flags": ["*update", "*accounts"],
                    "request_fields":[
                        {"tag": "TOR",              "path": "*cgreq.ToR",            "type": "*constant", "value": "*data",                         "mandatory": true},
                        {"tag": "OriginHost",       "path": "*cgreq.OriginHost",     "type": "*variable",  "value": "~*req.Origin-Host",             "mandatory": true},
                        {"tag": "OriginID",         "path": "*cgreq.OriginID",       "type": "*variable",  "value": "~*req.Session-Id",              "mandatory": true},
                        {"tag": "RequestType",      "path": "*cgreq.RequestType",    "type": "*variable",  "value": "*prepaid",                     "mandatory": true},
                        {"tag": "Tenant",           "path": "*cgreq.Tenant",         "type": "*variable",  "value": "golant",                       "mandatory": true},
						//{"tag": "Category",         "path": "*cgreq.Category",       "type": "*constant", "value": "*attributes",                   "mandatory": true},
                        {"tag": "Category",         "path": "*cgreq.Category",       "type": "*constant", "value": "data",                   "mandatory": true},
                        {"tag": "Account",          "path": "*cgreq.Account",        "type": "*variable",  "value": "~*req.Subscription-Id.Subscription-Id-Data[~Subscription-Id-Type(0)]" , "mandatory": true },
                        {"tag": "Destination",      "path": "*cgreq.Destination",    "type": "*variable",  "value": "~*req.Service-Information.PS-Information.3GPP-SGSN-MCC-MNC", "mandatory": true},
                        {"tag": "SetupTime",        "path": "*cgreq.SetupTime",      "type": "*variable",  "value": "~*req.Event-Timestamp",         "mandatory": true},
                        {"tag": "AnswerTime",       "path": "*cgreq.AnswerTime",     "type": "*variable",  "value": "~*req.Event-Timestamp",         "mandatory": true},
                        {"tag": "Reporting-Reason", "path": "*cgreq.Reporting-Reason", "type": "*variable",  
                            //"filters": ["*rsr::~*req.Multiple-Services-Credit-Control.Reporting-Reason[~Rating-Group(1)](!^$)"],
                            "value": "~*req.Multiple-Services-Credit-Control.Reporting-Reason[~Rating-Group(1)]", "mandatory": false},
                        {"tag": "Reporting-Reason", "path": "*cgreq.Reporting-Reason", "type": "*variable",  
                           //"filters": ["*rsr::~*req.Multiple-Services-Credit-Control.Used-Service-Unit.Reporting-Reason[~Rating-Group(1)](!^$)"],
                           "value": "~*req.Multiple-Services-Credit-Control.Used-Service-Unit.Reporting-Reason[~Rating-Group(1)]", "mandatory": false},
                        //{"tag": "Usage",        "path": "Usage",          "type": "*variable",  "value": "*attributes"},
                        {"tag": "Usage",        "path": "*cgreq.Usage",          "type": "*constant", "value": "10485760"},
                        {"tag": "LastUsed",     "path": "*cgreq.LastUsed",       "type": "*sum", 
                            "value": "~*req.Multiple-Services-Credit-Control.Used-Service-Unit.CC-Input-Octets[~Rating-Group(1)];~*req.Multiple-Services-Credit-Control.Used-Service-Unit.CC-Output-Octets[~Rating-Group(1)]", "mandatory": true},
                            

                    ],
                    "reply_fields": [
                                    {"tag": "CCATemplate", "type": "*template", "value": "*cca"},
                                    {"tag": "ResultCode",  "path": "*rep.Result-Code", "type": "*constant", "value": "4012",  "blocker": true,
                                        //"filters": ["*rsr::~*cgrep.MaxUsage{*duration_nanoseconds}(<102400)"]}, 
                                        "filters": ["*lt:~*cgrep.MaxUsage{*duration_nanoseconds}:102400"]},
                                    {"tag": "ResultCode",  "path": "*rep.Result-Code", "type": "*constant", "value": "2001", "filters": ["*empty:~*cgrep.Error:"]},
                                    //{"tag": "ResultCode",  "path": "Result-Code", "type": "*constant", "value": "4012", "filters": ["*rsr::~*cgrep.MaxUsage{*duration_nanoseconds}(<102400)"]},
                                    {"tag": "GrantedUnits", "path": "*rep.Multiple-Services-Credit-Control.Granted-Service-Unit.CC-Total-Octets", 
                                        //"filters": ["*rsr::~*cgrep.MaxUsage{*duration_nanoseconds}(>0)"], 
                                        "filters": ["*gt:~*cgrep.MaxUsage{*duration_nanoseconds}:0"], 
                                        "value": "~*cgrep.MaxUsage{*duration_nanoseconds}", 
                                        //"filters": ["*gte:~*cgrep.MaxUsage:0s"],
                                        //"value": "~*cgrep.MaxUsage{*duration_nanoseconds&*multiply:1048576&*round}",
                                        "type": "*variable",  "mandatory": true},
                                    
                                    //{"tag": "GrantedUnits", "path": "Multiple-Services-Credit-Control.Granted-Service-Unit.CC-Total-Octets", 
                                        //"filters": ["*string:*cgrep.MaxUsage{*duration_nanoseconds}:-1 "],
                                    //"filters": ["*rsr::~*cgrep.MaxUsage{*duration_nanoseconds}(>0)"],
                                    //      "type": "*constant", "value": "10485760", "mandatory": true},
                                    //{"tag": "GrantedUnits", "path": "Multiple-Services-Credit-Control.Granted-Service-Unit.CC-Total-Octets", 
                                    //  "filters": ["*rsr::~*cgrep.MaxUsage{*duration_nanoseconds}(>0)"],
                                    //  "type": "*variable",  "value": "~*cgrep.MaxUsage{*duration_nanoseconds}", "mandatory": true},
                                    //{"tag": "GrantedUnits", "path": "Multiple-Services-Credit-Control.Granted-Service-Unit.CC-Total-Octets",
                                    //    "filters": ["*gte:~*cgrep.MaxUsage:0s"],
                                    //    "type": "*variable",  "value": "~*cgrep.MaxUsage{*duration_nanoseconds}", "mandatory": true},
                                    
                                    {"tag": "CCATemplate", "type": "*template", "value": "cca-custom", 
                                        //"filters": ["*rsr::~*cgrep.MaxUsage{*duration_nanoseconds}(<102400)"]}
                                        "filters": ["*lt:~*cgrep.MaxUsage{*duration_nanoseconds}:102400"]}
                                   
                   ]
      },
      {
                    "id": "data_terminate",
                    //"filters": ["*string:~*vars.*cmd:CCR", "*string:~*req.CC-Request-Type:3", "*string:~*req.Service-Context-Id:008.425.13.32251@3gpp.org"],
                    "filters": ["*string:~*vars.*cmd:CCR", "*string:~*req.CC-Request-Type:3"],
                    "flags": ["*terminate", "*accounts", "*cdrs"],
                    "request_fields":[
                        {"tag": "TOR",                                 "path": "*cgreq.ToR",                              "type": "*constant",     "value": "*data",                 "mandatory": true},
                        {"tag": "OriginHost",                          "path": "*cgreq.OriginHost",                       "type": "*variable",      "value": "~*req.Origin-Host",   "mandatory": true},
                        {"tag": "OriginID",                            "path": "*cgreq.OriginID",                         "type": "*variable",      "value": "~*req.Session-Id",    "mandatory": true},
                        {"tag": "RequestType",                         "path": "*cgreq.RequestType",                      "type": "*variable",      "value": "*prepaid",              "mandatory": true},
                        {"tag": "Tenant",                              "path": "*cgreq.Tenant",                           "type": "*variable",      "value": "golant",                "mandatory": true},
						//{"tag": "Category",                            "path": "*cgreq.Category",                         "type": "*constant",     "value": "*attributes",               "mandatory": true},
                        {"tag": "Category",                            "path": "*cgreq.Category",                         "type": "*constant",     "value": "data",               "mandatory": true},
                        {"tag": "Account",                             "path": "*cgreq.Account",                          "type": "*variable",      "value": "~*req.Subscription-Id.Subscription-Id-Data[~Subscription-Id-Type(0)]" , "mandatory": true },
                        {"tag": "Destination",                         "path": "*cgreq.Destination",                      "type": "*variable",      "value": "~*req.Service-Information.PS-Information.3GPP-SGSN-MCC-MNC", "mandatory": true},
                        {"tag": "SetupTime",                           "path": "*cgreq.SetupTime",                        "type": "*variable",      "value": "~*req.Event-Timestamp",     "mandatory": true},
                        {"tag": "AnswerTime",                          "path": "*cgreq.AnswerTime",                       "type": "*variable",      "value": "~*req.Event-Timestamp",     "mandatory": true},
                        {"tag": "Reporting-Reason", "path": "*cgreq.Reporting-Reason", "type": "*variable",  
                            //"filters": ["*rsr::~*req.Multiple-Services-Credit-Control.Reporting-Reason[~Rating-Group(1)](!^$)"],
                            "value": "~*req.Multiple-Services-Credit-Control.Reporting-Reason[~Rating-Group(1)]", "mandatory": false},
                        {"tag": "Reporting-Reason", "path": "*cgreq.Reporting-Reason", "type": "*variable",  
                            //"filters": ["*rsr::~*req.Multiple-Services-Credit-Control.Used-Service-Unit.Reporting-Reason[~Rating-Group(1)](!^$)"],
                            "value": "~*req.Multiple-Services-Credit-Control.Used-Service-Unit.Reporting-Reason[~Rating-Group(1)]", "mandatory": false},
                        {"tag": "Termination-Cause", "path": "*cgreq.Termination-Cause", "type": "*variable",  "value": "~*req.Termination-Cause", "mandatory": true},
                        {"tag": "LastUsed",     "path": "*cgreq.LastUsed",       "type": "*sum", 
                          "value": "~*req.Multiple-Services-Credit-Control.Used-Service-Unit.CC-Input-Octets[~Rating-Group(1)];~*req.Multiple-Services-Credit-Control.Used-Service-Unit.CC-Output-Octets[~Rating-Group(1)]"}, 
                        {"tag": "Called-Station-Id",                   "path": "*cgreq.Called-Station-Id",                "type": "*variable",      "value": "~*req.Service-Information.PS-Information.Called-Station-Id",                    "mandatory": false},
                        {"tag": "3GPP-Charging-Id",                    "path": "*cgreq.3GPP-Charging-Id",                 "type": "*variable",      "value": "~*req.Service-Information.PS-Information.3GPP-Charging-Id",                     "mandatory": false},
                        {"tag": "3GPP-GPRS-Negotiated-QoS-profile",    "path": "*cgreq.3GPP-GPRS-Negotiated-QoS-profile", "type": "*variable",      "value": "~*req.Service-Information.PS-Information.3GPP-GPRS-Negotiated-QoS-profile",     "mandatory": false},
                        {"tag": "3GPP-Charging-Characteristics",       "path": "*cgreq.3GPP-Charging-Characteristics",    "type": "*variable",      "value": "~*req.Service-Information.PS-Information.3GPP-Charging-Characteristics",        "mandatory": false},
                        {"tag": "3GPP-PDP-Type",                       "path": "*cgreq.3GPP-PDP-Type",                    "type": "*variable",      "value": "~*req.Service-Information.PS-Information.3GPP-PDP-Type",                        "mandatory": false},
                        {"tag": "GPP-SGSN-MCC-MNC",                    "path": "*cgreq.3GPP-SGSN-MCC-MNC",                "type": "*variable",      "value": "~*req.Service-Information.PS-Information.3GPP-SGSN-MCC-MNC",                    "mandatory": false},
                        {"tag": "3GPP-GGSN-MCC-MNC",                   "path": "*cgreq.3GPP-GGSN-MCC-MNC",                "type": "*variable",      "value": "~*req.Service-Information.PS-Information.3GPP-GGSN-MCC-MNC",                    "mandatory": false},
                        {"tag": "3GPP-NSAPI",                          "path": "*cgreq.3GPP-NSAPI",                       "type": "*variable",      "value": "~*req.Service-Information.PS-Information.3GPP-NSAPI",                           "mandatory": false},
                        //{"tag": "3GPP-Session-Stop-Indicator",         "path": "*cgreq.3GPP-Session-Stop-Indicator",      "type": "*variable",      "value": "~*req.Service-Information.PS-Information.3GPP-Session-Stop-Indicator",          "mandatory": false},
                        {"tag": "3GPP-MS-TimeZone",                    "path": "*cgreq.3GPP-MS-TimeZone",                 "type": "*variable",      "value": "~*req.Service-Information.PS-Information.3GPP-MS-TimeZone",                     "mandatory": false},
                        {"tag": "3GPP-Selection-Mode",                 "path": "*cgreq.3GPP-Selection-Mode",              "type": "*variable",      "value": "~*req.Service-Information.PS-Information.3GPP-Selection-Mode",                  "mandatory": false},
                        {"tag": "3GPP-RAT-Type",                       "path": "*cgreq.3GPP-RAT-Type",                    "type": "*variable",      "value": "~*req.Service-Information.PS-Information.3GPP-RAT-Type",                        "mandatory": false},
                        {"tag": "3GPP-User-Location-Info",             "path": "*cgreq.3GPP-User-Location-Info",          "type": "*variable",      "value": "~*req.Service-Information.PS-Information.3GPP-User-Location-Info",              "mandatory": false},
                        {"tag": "PDP-Address",                         "path": "*cgreq.PDP-Address",                      "type": "*variable",      "value": "~*req.Service-Information.PS-Information.PDP-Address",                          "mandatory": false},
                        {"tag": "3GPP-IMSI-MCC-MNC",                   "path": "*cgreq.3GPP-IMSI-MCC-MNC",                "type": "*variable",      "value": "~*req.Service-Information.PS-Information.3GPP-IMSI-MCC-MNC",                    "mandatory": false},
                        {"tag": "GGSN-Address",                        "path": "*cgreq.GGSN-Address",                     "type": "*variable",      "value": "~*req.Service-Information.PS-Information.GGSN-Address",                         "mandatory": false},
                        {"tag": "SGSN-Address",                        "path": "*cgreq.SGSN-Address",                     "type": "*variable",      "value": "~*req.Service-Information.PS-Information.SGSN-Address",                         "mandatory": false},
                        //{"tag": "Charging-Rule-Base-Name",             "path": "*cgreq.Charging-Rule-Base-Name",          "type": "*variable",      "value": "~*req.Service-Information.PS-Information.Charging-Rule-Base-Name",              "mandatory": false},
                        //{"tag": "PDP-Context-Type",                    "path": "*cgreq.PDP-Context-Type",                 "type": "*variable",      "value": "~*req.Service-Information.PS-Information.PDP-Context-Type",                     "mandatory": false}
                    ],
                    "reply_fields": [
                        {"tag": "ResultCode",  "path": "*rep.Result-Code", "type": "*constant", "value": "2001", "filters": ["*empty:~*cgrep.Error:"]},
                         {"tag": "CCATemplate", "type": "*template", "value": "*cca"},
                   ]
        },
        {
            "id": "peer_disconnect",
            "filters": ["*string:~*vars.*cmd:DPR"],
            "flags": ["*none", "*log"],
            "reply_fields": [
                {"tag": "CCATemplate", "type": "*template", "value": "*cca"},
                {"tag": "ResultCode",  "path": "*rep.Result-Code", "type": "*constant", "value": "2001", "filters": ["*empty:~*cgrep.Error:"]},   
               ]
        }   
        
    ]
    }
}
